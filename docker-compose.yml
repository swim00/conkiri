version: '3.8'           # docker-compose 버전

services:
  backend:
    build: ./backend     # backend Dockerfile 위치
    ports:
      - "8080:8080"      # 외부:내부 포트
    environment:         # 환경변수 설정
      - SPRING_PROFILES_ACTIVE=dev
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - KAKAO_REDIRECT_URL=${KAKAO_REDIRECT_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DB_URL=${DB_URL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - FRONTEND_URL=${FRONTEND_URL}
      - SERVER_DOMAIN=${SERVER_DOMAIN}
    depends_on:          # 의존성 설정
      mysql:
        condition: service_healthy

  frontend:
    build: ./frontend    # frontend Dockerfile 위치
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_KAKAO_MAP_API_KEY=${NEXT_PUBLIC_KAKAO_MAP_API_KEY}
    depends_on:
      - backend

  mysql:
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: mysql:8.0.4     # MySQL 이미지
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=conkiri
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "13309:3306"
    volumes:            # 데이터 영속성
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data:          # MySQL 데이터 저장용 볼륨
